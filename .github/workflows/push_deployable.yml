name: Building and testing the Docker image
on:
  push:
    branches:
      - development
      - main
  pull_request:
    branches:
      - main
jobs:   
  docker-build-and-push:
    name: "Docker Build and Push"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Extract branch name
        id: extract_branch
        run: echo "BRANCH_NAME=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Build Docker image
        run: |
          IMAGE_NAME=${{ secrets.DOCKERHUB_USERNAME }}/$([[ $BRANCH_NAME == "main" ]] && echo "prod-k8s" || echo "dev-k8s")
          TAG=${GITHUB_SHA::5}
          docker build -t $IMAGE_NAME:$TAG .

      - name: Push to appropriate repo
        run: |
          IMAGE_NAME=${{ secrets.DOCKERHUB_USERNAME }}/$([[ $BRANCH_NAME == "main" ]] && echo "prod-k8s" || echo "dev-k8s")
          TAG=${GITHUB_SHA::5}
          docker push $IMAGE_NAME:$TAG

      - name: Set up Git
        run: |
          git config --global user.name 'Monzy_b'
          git config --global user.email 'tomiwamonehin@gmail.com'
          git config --global credential.helper store

      - name: Update values.yaml
        env:
          PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG=${GITHUB_SHA::5}
          BRANCH_TAG=${TAG}
          sed -i 's/tag: .*/tag: '"$BRANCH_TAG"'/' ./kubernetes-argocd/values.yaml
          git config --global user.name 'Monzy-B'
          git config --global user.email 'tomiwamonehin@gmail.com'
          git add ./kubernetes-argocd/values.yaml
          git commit -m "Update image tag to $BRANCH_TAG"
          git push https://github.com/Monzy-B/argocd.git HEAD:main

      - name: Install ArgoCD CLI
        run: |
          curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/download/v2.1.7/argocd-linux-amd64
          chmod +x /usr/local/bin/argocd

      - name: Trigger ArgoCD to sync
        run: |
          argocd login $ARGOCD_SERVER --username $ARGOCD_USERNAME --password $ARGOCD_PASSWORD --insecure
          argocd app sync k8s-argocd
        env: 
          ARGOCD_SERVER: ${{ secrets.ARGOCD_SERVER }}
          ARGOCD_USERNAME: ${{ secrets.ARGOCD_USERNAME }}
          ARGOCD_PASSWORD: ${{ secrets.ARGOCD_PASSWORD }}
